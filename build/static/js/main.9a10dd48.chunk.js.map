{"version":3,"sources":["environment.ts","remote/index.ts","remote/user-service/updatePassword.ts","action-mappers/updatePassword-action-mapper.ts","reducers/update-password-reducer.ts","action-mappers/updateRole-action-mapper.ts","reducers/update-role-reducer.ts","remote/user-service/newUserSignup.ts","action-mappers/signup-register-action-mapper.ts","reducers/newUser-signUp-reducer.ts","remote/user-service/login.ts","action-mappers/login-action-mapper.ts","reducers/login-reducer.ts","remote/user-service/getRole.ts","action-mappers/getRole-action-mapper.ts","reducers/get-role-reducer.ts","reducers/index.ts","store.ts","components/UpdatePasswordComponent/UpdatePasswordComponent.tsx","components/UpdateRoleComponent/UpdateRoleComponent.tsx","remote/user-service/getAllAssociate.ts","components/AssociateDisplayComponent/AssociateDisplayComponent.tsx","utils/joinResponses.ts","remote/user-service/retrieveFilteredAssociateResults.ts","components/AllAssociateComponent/AllAssociateComponent.tsx","remote/user-service-api/getbatchIDbyTrainer.ts","remote/user-service/getCurrentBatches.ts","components/BatchDisplayComponent/BatchDisplayComponent.tsx","components/CurrentBatchesComponent/CurrentBatches.tsx","components/BatchbyTrainerComponent/BatchbyTrainerEmailComponent.tsx","components/NavbarComponent/NavbarComponent.tsx","components/LoginComponent/LoginComponent.tsx","components/Auth0SignUpComponent/Auth0SignupComponent.tsx","remote/profile-service/getAllProfile.ts","components/AllProfileIDisplay/AllProfileDisplay.tsx","remote/profile-service/retrieveFilteredProfileResults.ts","components/AllProfileComponent/AllProfileComponent.tsx","components/LogoutComponent/LogoutComponent.tsx","components/GetRoleComponent/GetRoleComponent.tsx","components/HomeComp/HomeComp.tsx","remote/index_profile.ts","remote/profile-service/getMyProfile.ts","components/UserDisplayComponent/UserDisplayComponent.tsx","components/ProfileComponent/ProfileComponent.tsx","remote/profile-service/getProfilebyTrainer.ts","components/AssociatebyTrainerComponent/AssociatebyTrainerComponent.tsx","remote/profile-serivce-api/index.ts","remote/profile-serivce-api/updateProfile.ts","components/AssociateProfileComponent/EditAssociateProfile.tsx","remote/profile-serivce-api/createProfile.ts","components/AssociateProfileComponent/CreateAssociateProfile.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["acBaseUrl","userServiceBaseClient","axios","create","baseURL","headers","Content-Type","profileServiceBaseClient","updatePasswordRemote","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","body","response","wrap","_context","prev","next","patch","sent","console","log","abrupt","data","t0","stop","_x","apply","this","arguments","updatePasswordTypes","updatePasswordActionMapper","userId","password","dispatch","type","payload","message","includes","initialState","Response","errorMessage","updateRoleTypes","submitSignUpRemote","post","signUptypes","signUpActionMapper","email","user_metadata","connection","loginRemote","defaults","common","authorization","document","cookie","concat","loginTypes","loginActionMapper","username","Error","toast","error","currentUser","undefined","getRoleRemote","id","get","getRoleTypes","getRoleActionMapper","currentRole","state","combineReducers","updatePasswordState","length","action","objectSpread","updateRoleState","signupState","loginState","getRoleState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxThunk","store","createStore","UpdatePasswordComponent","makeStyles","theme","createStyles","button","color","cursor","fontWeight","fontFamily","createMuiTheme","palette","primary","deepOrange","props","_useState","useState","_useState2","slicedToArray","password1","changePassword1","_useState3","_useState4","password2","changePassword2","useSelector","useDispatch","submitPassword","e","thunk","preventDefault","history","push","react_default","createElement","onSubmit","Grid","container","item","xs","sm","alignItems","direction","justify","style","padding","display","flexDirection","maxWidth","minWidth","src","width","alt","TextField","label","margin","InputProps","startAdornment","InputAdornment","position","LockRounded","value","onChange","currentTarget","height","Button","variant","useStyles","formControl","spacing","component","justifyContent","selectEmpty","marginTop","background","borderColor","minHeight","root","hover","UpdateRoleComponent","classes","role","changeRole","Container","className","Paper","square","elevation","FormControl","InputLabel","htmlFor","ThemeProvider","Select","native","inputProps","name","getAllAssociates","res","flexWrap","& > *","paper","backgroundColor","overflow","typography","fontSize","AssociateDisplayComponent","Typography","associate","salesforceId","firstName","lastName","flag","UpdateRoleComponent_UpdateRoleComponent","assign","key","joinResponses","skillArray","yearArray","quarterArray","retrieveFilteredAssociateResults","batchSkill","batchQuarter","batchYear","skillResponse","yearResponse","quarterResponse","filteredAssociates","_x2","_x3","paddingTop","paddingBottom","fixedHeight","buttonStyle","textColor","AllAssociatesComponent","fixedHeightPaper","clsx","allAssociate","changeAllAssociate","_React$useState","React","_React$useState2","setBatchQuarter","_React$useState3","_React$useState4","setBatchSkill","_React$useState5","_React$useState6","setBatchYear","useEffect","getAssociates","applyFilter","_ref2","_callee2","filteredResults","_context2","AssociateDisplays","map","AssociateDisplayComponent_AssociateDisplayComponent","labelId","event","target","MenuItem","onClick","md","lg","getBatchIdByTrainer","trainerEmail","getCurrentBatches","heading","pxToRem","fontWeightRegular","BatchDisplayComponent","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","batch","batchId","AccordionDetails","startDate","endDate","skill","location","goodGrade","passingGrade","currentWeek","CurrentBatchesComponent","currentBatch","changeCurrentBatch","getBatches","BatchDisplays","BatchDisplayComponent_BatchDisplayComponent","BatchbyTrainerEmailComponent","BatchProfile","changeBatchProfile","useParams","batchInfo","getBatch","CurrentBatches_CurrentBatchesComponent","flexGrow","menuButton","marginLeft","title","margins","link","textDecoration","&:hover","bar","logo","StyledMenuItem","withStyles","NavBarComponent","anchorEl","setAnchorEl","handleClose","menuItems","react_router_dom","to","pop","AppBar","Toolbar","IconButton","edge","aria-label","Menu_default","Menu_Menu","keepMounted","open","Boolean","onClose","Link","Person_default","maxHeight","form","font","links","LoginComponent","changeUsername","changePassword","loginSubmit","autoComplete","noValidate","fullWidth","required","defaultValue","href","underline","h2","borderRadius","NewUserComponent","preferredName","changePreferredName","changeLastName","_useState5","_useState6","changeEmail","_useState7","_useState8","_useState9","_useState10","confirmPassword","changeConfirmPassword","_useState11","_useState12","submitUser","newUser","getAllProfile","ProfileDisplayComponent","profile","favLanguage","nickname","pronouns","auth0Id","hobbies","favFoods","specialTrait","degree","relevantSkills","introvert","toString","studyGroup","retrieveFilteredProfileResults","AllProfileComponent","Profile","allProfile","changeAllProfile","getProfile","ProfileDisplays","AllProfileDisplay_ProfileDisplayComponent","LogoutComponent","logout","useAuth0","logoutSubmit","split","forEach","c","replace","Date","toUTCString","returnTo","react_router","GetRoleComponent","getRole","Copyright","align","getFullYear","icon","marginRight","heroContent","heroButtons","header","cardGrid","card","cardMedia","cardContent","footer","HomeComp","Fragment","CssBaseline","gutterBottom","paragraph","Card","CardContent","CardHeader","CardActions","size","getMyProfile","table","large","UserDisplayComponent","Box","Table","TableBody","TableRow","TableCell","ProfileComponent","userProfile","changeUserProfile","userEmail","getUser","userInfo","UserDisplayComponent_UserDisplayComponent","getProfilebyTrainer","AssociatebyTrainerComponent","associateProfile","changeProfile","profileInfo","AllProfileComponent_AllProfileComponent","profileServiceClient","editCurrentProfile","updtPrfl","authId","EditAssociateProfile","changeFirstName","changeNickname","changePronouns","changeHobbies","changeFavFoods","_useState13","_useState14","changeSpecialTrait","_useState15","_useState16","changeDegree","_useState17","_useState18","changeFavLanguage","_useState19","_useState20","changeRelevantSkills","registerSubmit","updatedProfile","createProfile","newProfile","CreateAssociateProfile","_useState21","_useState22","changeIntrovert","_useState23","_useState24","changeStudyGroup","FormControlLabel","control","Switch","checked","border","borderTopColor","borderTopWidth","borderWidth","App","changeCurrentUser","es","NavbarComponent_NavBarComponent","user","path","exact","render","LoginComponent_LoginComponent","auth0_react_esm","domain","clientId","process","redirectUri","origin","react_toastify_esm","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","closeButton","hostname","match","ReactDOM","StrictMode","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9a10dd48.chunk.js","sourcesContent":["export let acBaseUrl:string\nexport let pcBaseUrl:string\n\nif(process.env['NODE_ENV'] === 'production'){\n    //Ingress's IP goes here\n    acBaseUrl='http://35.245.104.196'\n}else {\n    //adjusted for nginx/multiple servers\n    acBaseUrl='http://localhost:80'\n}","import axios from 'axios'\nimport { acBaseUrl } from '../environment'\n\n//an optional env for host address or localhost default\n//this is the caliber IP (?)\n\nexport const userServiceBaseClient = axios.create({\n    baseURL: acBaseUrl,\n    headers:{\n        'Content-Type':'application/json'\n    },\n})\nexport const profileServiceBaseClient = axios.create({\n    baseURL: acBaseUrl,\n    headers:{\n        'Content-Type':'application/json'\n    },\n})\n","import { userServiceBaseClient} from '../index'\n\nexport const updatePasswordRemote = async (body:any) => {\ntry { \n        //needs to include path to that service (the repo name) as the base path\n        let response = await userServiceBaseClient.patch('/user-service/updatePassword', body);\n\n        console.log(response);\n        return response.data\n    } catch (error) {\n        console.log(error);\n        throw error\n    }\n}","\nimport { updatePasswordRemote } from \"../remote/user-service/updatePassword\";\n\n\nexport const updatePasswordTypes = {\n    SUCCEFUL_UPDATE:'SUCCESSFULLY_UPDATED_PASSWORD',\n    INTERNAL_SERVER: 'UPDATE_PASSWORD_INTERNAL_SERVER',\n    UNAUTHORIZED: 'UPDATE_PASSWORD_UNAUTHORIZED'\n}\n\nexport const updatePasswordActionMapper = (userId:string, password:string) => async (dispatch:any) =>{\n    try {\n        let body = { userId, password };\n        let response = 'Updated Password Successfully';\n        await updatePasswordRemote(body);\n        dispatch({\n            type:updatePasswordTypes.SUCCEFUL_UPDATE,\n            payload:{ \n                response\n            }\n        })\n    } catch (error) {\n        if(error.message.includes('401')){\n            dispatch({\n                type:updatePasswordTypes.UNAUTHORIZED\n            })\n        } else{\n            dispatch({\n                type: updatePasswordTypes.INTERNAL_SERVER\n            })\n        }\n    }\n}","import { AnyAction } from \"redux\";\nimport { updatePasswordTypes } from \"../action-mappers/updatePassword-action-mapper\";\nimport { IUpdatePasswordState } from \".\";\n\nconst initialState:IUpdatePasswordState = {\n    Response: '',\n    errorMessage: ''\n}\n\nexport const updatePasswordReducer = (state=initialState, action:AnyAction) => {\n    switch (action.type) {\n        case updatePasswordTypes.UNAUTHORIZED:{\n            return {\n                ...state,\n                errorMessage:'You can only change your own password.'\n            }\n        }\n        case updatePasswordTypes.INTERNAL_SERVER:{\n            return {\n                ...state,\n                errorMessage:'Oops, Something Went Wrong'\n            }\n        }\n        case updatePasswordTypes.SUCCEFUL_UPDATE:{\n            return{\n                ...state,\n                Response:action.payload.response\n            }\n        }\n        default:\n            return state;\n    }\n}","import { updateRoleRemote } from \"../remote/user-service/updateRole\";\n\nexport const updateRoleTypes = {\n    SUCCEFUL_UPDATE:'SUCCESSFULLY_UPDATED_ROLE',\n    INTERNAL_SERVER: 'UPDATE_ROLE_INTERNAL_SERVER',\n    UNAUTHORIZED: 'UPDATE_ROLE_UNAUTHORIZED'\n}\n\nexport const updateRoleActionMapper = (currentUserId:string, email:string, role:string) => async (dispatch:any) =>{\n    try {\n        let body = { currentUserId, email, role };\n        let response = 'Updated Role Successfully';\n        await updateRoleRemote(body);\n        dispatch({\n            type:updateRoleTypes.SUCCEFUL_UPDATE,\n            payload:{ \n                response\n            }\n        })\n    } catch (error) {\n        if(error.message.includes('401')){\n            dispatch({\n                type:updateRoleTypes.UNAUTHORIZED\n            })\n        } else{\n            dispatch({\n                type: updateRoleTypes.INTERNAL_SERVER\n            })\n        }\n    }\n}","import { AnyAction } from \"redux\";\nimport { updateRoleTypes } from \"../action-mappers/updateRole-action-mapper\";\nimport { IUpdateRoleState } from \".\";\n\nconst initialState:IUpdateRoleState = {\n    Response: '',\n    errorMessage: ''\n}\n\nexport const updateRoleReducer = (state=initialState, action:AnyAction) => {\n    switch (action.type) {\n        case updateRoleTypes.UNAUTHORIZED:{\n            return {\n                ...state,\n                errorMessage:'Only Admin can change role.'\n            }\n        }\n        case updateRoleTypes.INTERNAL_SERVER:{\n            return {\n                ...state,\n                errorMessage:'Oops, Something Went Wrong'\n            }\n        }\n        case updateRoleTypes.SUCCEFUL_UPDATE:{\n            return{\n                ...state,\n                Response:action.payload.response\n            }\n        }\n        default:\n            return state;\n    }\n}","\nimport { userServiceBaseClient } from \"..\";\n\n\n\nexport const submitSignUpRemote = async (body:any) => {\n\n    try{\n        let response = await userServiceBaseClient.post('/user-service/register', body)\n        console.log(response);\n        return response.data//should be the user object\n    } catch(e){\n        console.log(e);\n        //should probably do something is we get an error\n    }\n} ","import { submitSignUpRemote } from \"../remote/user-service/newUserSignup\";\n\n\nexport const signUptypes = {\n    SUCCEFUL_SIGNEDUP:'SUCCESSFULLY_SIGNED_UP',\n    INTERNAL_SERVER: 'SIGN_UP_INTERNAL_SERVER',\n    MISSING_FIELD: 'SIGN_UP_MISSING_FIELD',\n    //EMAIL_ERROR: 'EMAIL_ERROR'\n}\n\n\nexport const signUpActionMapper = (email:string, password:string, user_metadata:any, connection: string) => async (dispatch:any) =>{\n    try {\n        let body = { email, password, user_metadata, connection};\n        let response = 'Sign Up Successful';\n       \n        await submitSignUpRemote(body);\n        dispatch({\n            type:signUptypes.SUCCEFUL_SIGNEDUP,\n            payload:{ \n                response\n            }\n        })\n    } catch (error) {\n        if(error.message.includes('404')){\n            dispatch({\n                type:signUptypes.MISSING_FIELD\n            })\n        }else{\n            dispatch({\n                type: signUptypes.INTERNAL_SERVER\n            })\n        }\n    }\n}\n\n/*\nexport const SignUpError = () =>{\n    return{\n        type:signUptypes.EMAIL_ERROR\n    }\n}\n*/","import { signUptypes } from \"../action-mappers/signup-register-action-mapper\"\nimport { AnyAction } from \"redux\"\nimport { ISignUpState } from \".\"\n\n\nconst initialState:ISignUpState = {\n    Response: '',\n    errorMessage: ''\n}\n\nexport const signUpRegisterReducer = (state=initialState, action:AnyAction) => {\n    switch (action.type) {\n        case signUptypes.MISSING_FIELD:{\n            return {\n                ...state,\n                errorMessage:'Please fill out all necessary fields.'\n            }\n        }\n        case signUptypes.INTERNAL_SERVER:{\n            return {\n                ...state,\n                errorMessage:'Oops, Something Went Wrong'\n            }\n        }\n        case signUptypes.SUCCEFUL_SIGNEDUP:{\n            return{\n                ...state,\n                Response:action.payload.response\n            }\n        }\n        default:\n            return state;\n    }\n}","import { userServiceBaseClient } from \"..\";\n\nexport const loginRemote = async (body:any) => {\n    try{\n        let response = await userServiceBaseClient.post('/user-service/login', body)\n        console.log(response);\n\n        userServiceBaseClient.defaults.headers.common['Authorization'] = response.headers.authorization\n        document.cookie = `token=${response.headers.authorization}` //stores token in a cookie and potentially grabs it on startup\n\n        return response.data\n    } catch(e){\n        throw(e)\n    }\n}","import { loginRemote } from \"../remote/user-service/login\";\nimport { toast } from \"react-toastify\";\n\nexport const loginTypes = {\n    SUCCESSFUL_LOGIN:'SUCCESSFULLY_LOGGED_IN',\n    BAD_CREDENTIALS:'BAD_CREDENTIALS',\n    BAD_REQUEST:'BAD_REQUEST',\n    USER_NOT_FOUND: 'USER_NOT_FOUND',\n    INTERNAL_SERVER:'LOGIN_INTERNAL_SERVER',\n    RESET_ERROR: 'RESET_ERROR',\n    USER_LOGOUT: 'USER_LOGOUT'\n}\n\nexport const loginActionMapper = (username:string, password:string) => async (dispatch:any) => {\n    try  {\n        if (username === 'logout'){\n           throw Error('logout') \n        }\n        let body = { username, password };\n        let response = await loginRemote(body);\n        \n        dispatch({\n            type: loginTypes.SUCCESSFUL_LOGIN,\n            payload: {\n                response\n            }\n       })\n    } catch(error) {\n        if(error.message.includes('400')){\n            dispatch({\n                type:loginTypes.BAD_REQUEST\n            })\n            toast.error('Please fill out all fields')\n        } else if(error.message.includes('401')){\n            dispatch({\n                type:loginTypes.BAD_CREDENTIALS\n            })\n            toast.error('Bad Credentials')\n        } else if(error.message.includes('404')) {\n            dispatch({\n                type:loginTypes.USER_NOT_FOUND\n            })\n        } else if (error.message === 'logout'){\n            dispatch({\n                type:loginTypes.USER_LOGOUT\n            }) \n        }else{\n            dispatch({\n                type: loginTypes.INTERNAL_SERVER\n            })\n            toast.error('Server Error')\n        }\n    }\n}\n\nexport const loginErrorReset = () =>{\n    return{\n        type:loginTypes.RESET_ERROR\n    }\n}\n","import { ILoginState } from \"./index\"\nimport { AnyAction } from \"redux\";\nimport { loginTypes } from \"../action-mappers/login-action-mapper\";\n\nconst initialState:ILoginState = {\n    currentUser:undefined,\n    errorMessage: ''\n}\n\nexport const loginReducer = (state=initialState, action:AnyAction) => {\n    switch (action.type) {\n        case loginTypes.SUCCESSFUL_LOGIN:{\n            return {\n                ...state,\n                currentUser:action.payload.response\n            }\n        }\n        case loginTypes.BAD_REQUEST:{\n            return {\n                ...state,\n                errorMessage:'Please Fill Out All Fields'\n            }\n        }\n        case loginTypes.BAD_CREDENTIALS:{\n            return {\n                ...state,\n                errorMessage:'Incorrect Username or Password'\n            }\n        }\n        case loginTypes.USER_NOT_FOUND:{\n            return {\n                ...state,\n                errorMessage: 'User Not Found'\n            }\n        }\n        case loginTypes.INTERNAL_SERVER:{\n            return {\n                ...state,\n                errorMessage:'Oops, Something Went Wrong'\n            }\n        } case loginTypes.USER_LOGOUT:{\n            return {\n                ...state,\n                currentUser: undefined\n            }\n        }\n        case loginTypes.RESET_ERROR:{\n            return {\n                ...state,\n                errorMessage:''\n            }\n        }\n\n        default:{\n            return state\n        }\n    }\n}","import { userServiceBaseClient } from '../index';\n\nexport const getRoleRemote = async (id:any) =>{\n    try{\n        let response = await userServiceBaseClient.get(`/user-service/getRole/${id}`)\n        console.log(response)\n        return response.data\n    } catch (error) {\n        console.log(error);\n        throw error\n    }\n}","import { getRoleRemote } from \"../remote/user-service/getRole\";\n\nexport const getRoleTypes = {\n    SUCCEFUL_UPDATE:'SUCCESSFULLY_GET_ROLE',\n    INTERNAL_SERVER: 'GET_ROLE_INTERNAL_SERVER',\n    UNAUTHORIZED: 'GET_ROLE_UNAUTHORIZED'\n}\n\nexport const getRoleActionMapper = (id:string) => async (dispatch:any) =>{\n    try {\n        let response = await getRoleRemote(id);\n        dispatch({\n            type:getRoleTypes.SUCCEFUL_UPDATE,\n            payload:{ \n                response\n            }\n        })\n    } catch (error) {\n        if(error.message.includes('401')){\n            dispatch({\n                type:getRoleTypes.UNAUTHORIZED\n            })\n        } else{\n            dispatch({\n                type: getRoleTypes.INTERNAL_SERVER\n            })\n        }\n    }\n}","import { AnyAction } from \"redux\";\nimport { getRoleTypes } from \"../action-mappers/getRole-action-mapper\";\nimport { IGetRoleState } from \".\";\n\nconst initialState:IGetRoleState = {\n    currentRole: undefined,\n    errorMessage: ''\n}\n\nexport const getRoleReducer = (state=initialState, action:AnyAction) => {\n    switch (action.type) {\n        case getRoleTypes.UNAUTHORIZED:{\n            return {\n                ...state,\n                errorMessage:'You can only get your own role.'\n            }\n        }\n        case getRoleTypes.INTERNAL_SERVER:{\n            return {\n                ...state,\n                errorMessage:'Oops, Something Went Wrong'\n            }\n        }\n        case getRoleTypes.SUCCEFUL_UPDATE:{\n            return{\n                ...state,\n                currentRole:action.payload.response\n            }\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { updatePasswordReducer } from \"./update-password-reducer\";\nimport { updateRoleReducer } from \"./update-role-reducer\";\nimport { User } from \"../models/User\";\nimport { signUpRegisterReducer } from \"./newUser-signUp-reducer\";\nimport { Role } from \"../models/Role\"\nimport { loginReducer } from \"./login-reducer\";\nimport { getRoleReducer } from \"./get-role-reducer\";\n\n\nexport interface IUpdatePasswordState{\n    Response:string,\n    errorMessage:string\n}\n\nexport interface IUpdateRoleState{\n    Response:string,\n    errorMessage:string\n}\n\nexport interface IGetRoleState{\n    currentRole?:Role,\n    errorMessage:string\n}\n\nexport interface ILoginState{\n    currentUser?:User,\n    errorMessage:string\n}\n\nexport interface ISignUpState{\n    Response: string,\n    errorMessage: string\n}\n\n\nexport interface IState{\n    updatePasswordState:IUpdatePasswordState,\n    updateRoleState:IUpdateRoleState,\n    signupState: ISignUpState,\n    loginState: ILoginState,\n    getRoleState: IGetRoleState,\n}\n\nexport const state = combineReducers<IState>({\n    updatePasswordState:updatePasswordReducer,\n    updateRoleState:updateRoleReducer,\n    signupState: signUpRegisterReducer,\n    loginState: loginReducer,\n    getRoleState: getRoleReducer\n})","import { compose, applyMiddleware, createStore } from \"redux\"\nimport reduxThunk from 'redux-thunk'\nimport { state } from \"./reducers\"\n\n//the browser window\nconst w:any = window\n\n//if they have dev tools installed use them, else use the default\nconst composeEnhancers = w.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n//apply redux thunk\nconst enhancer = composeEnhancers(\n    applyMiddleware(reduxThunk)\n)\n\n//actually build the store\nexport const store = createStore(\n    state,\n    enhancer\n)","import React, { FunctionComponent, useState, SyntheticEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { updatePasswordActionMapper } from '../../action-mappers/updatePassword-action-mapper';\nimport { IState } from '../../reducers';\n\n//MUI\nimport {Grid, TextField, Button, InputAdornment, createMuiTheme, Theme} from '@material-ui/core'\nimport {AccountCircle, LockRounded} from '@material-ui/icons'\nimport {deepOrange} from '@material-ui/core/colors';\nimport { makeStyles, createStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: Theme)=>createStyles({\n    button:{\n        color: \"#f26925\",\n        cursor: 'pointer',\n        fontWeight: 'bold',\n        fontFamily: 'sans-serif'\n    },\n    }),\n);\nconst theme = createMuiTheme({\n    palette: {\n        primary: deepOrange,\n    },\n});\n\nexport const UpdatePasswordComponent:FunctionComponent<any> = (props) => {\n    let [password1, changePassword1] = useState('');\n    let [password2, changePassword2] = useState('');\n\n    const updatePassword1 = (e:any) =>{\n        e.preventDefault();\n        changePassword1(e.currentTarget.value);\n    }\n\n    const updatePassword2 = (e:any) =>{\n        e.preventDefault();\n        changePassword2(e.currentTarget.value);\n    }\n\n    let currentUser = useSelector((state:IState)=>{\n        return state.loginState.currentUser\n    })\n\n    let dispatch = useDispatch();\n\n    const submitPassword = async (e: SyntheticEvent) => {\n        e.preventDefault();\n        try {\n            if (password1 !== password2){\n                toast.error('Passwords Do Not Match')\n            } else { //idk why this is giving an error\n                let thunk = await updatePasswordActionMapper(currentUser.userId, password1); // replace 1 with currentUser.userId\n                dispatch(thunk); \n            }\n            props.history.push('/home')\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        (currentUser)?\n        <div>\n                <form onSubmit={submitPassword}>\n                <Grid\n                    container\n                    item\n                    xs={12}\n                    sm={6}\n                    alignItems=\"center\"\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    style={{padding:10}}>\n                    <div/>\n                    <div style={{display: \"flex\", flexDirection: \"column\", \n                    maxWidth: 400,\n                    minWidth: 300,\n                 }}>\n                        <Grid container justify=\"center\">\n                            <img src=\"images/revaturelogo.jpg\" width={200}\n                            alt=\"revaturelogo\"\n                            />\n                        </Grid>\n                        <TextField\n                        type=\"password\"\n                        label=\"Current Password\" margin=\"normal\"\n                        InputProps={{ startAdornment: ( <InputAdornment position=\"start\">\n                        <LockRounded />\n                        </InputAdornment>\n                        ),\n                        }}\n                        />\n                        <TextField \n                        type=\"password\"\n                        label=\"New Password\" margin=\"normal\"\n                        value={password1} onChange={updatePassword1}\n                        InputProps={{ startAdornment: ( <InputAdornment position=\"start\">\n                        <LockRounded />\n                        </InputAdornment>\n                        ),\n                        }}\n                        />\n                        <TextField \n                        type=\"password\"\n                        label=\"Confirm Password\" margin=\"normal\"\n                        value={password2} onChange={updatePassword2}\n                        InputProps={{ startAdornment: (\n                        <InputAdornment position=\"start\">\n                        <LockRounded/>\n                        </InputAdornment>\n                        ),\n                        }}\n                        />\n                        <div style={{height:20}}/>\n                       <Button type=\"submit\" color=\"primary\"\n                       variant=\"contained\">\n                        Update Password\n                        </Button>\n                        </div>\n        \n                    <div/>\n\n                </Grid>\n                </form>\n                </div> \n                : //wont work without this, but we should change it\n                <div> Loading... </div>\n    )}\n\n//              {/* <input type=\"password\" name=\"password1\" placeholder=\"new password\" value={password1} onChange={updatePassword1}></input>\n//             <input type=\"password\" name=\"password2\" placeholder=\"new password\" value={password2} onChange={updatePassword2}></input>\n//             <button className=\"btn \" type=\"submit\" onClick={submitPassword}> Submit </button>\n//         </div>\n//         :\n//         <div> Loading... </div>\n//     )\n// }\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { FunctionComponent, useState, SyntheticEvent } from 'react'\nimport { createStyles, makeStyles, Theme, InputLabel, Select, FormControl, Container, createMuiTheme, ThemeProvider, Paper } from '@material-ui/core';\nimport { IState } from '../../reducers';\nimport { deepOrange } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/styles';\nimport { updateRoleActionMapper } from '../../action-mappers/updateRole-action-mapper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        component: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '80vh'\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        button: {\n            background: \"#61dafb\",\n            borderColor: \"#61dafb\",\n            minWidth: 90,\n            minHeight: 40\n        },\n        root: {\n            padding: theme.spacing(1)\n        },\n    }),\n);\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: deepOrange,\n        action: {\n            hover: '#F26925', //can't get this to work\n\n        }\n    },\n});\n\nexport const UpdateRoleComponent: FunctionComponent<any> = (props) => {\n    const classes = useStyles();\n    const [role, changeRole] = useState('');\n\n    const updateRole = (e: any) => {\n        e.preventDefault();\n        changeRole(e.currentTarget.value);\n        console.log(role);\n\n    }\n\n    let currentUser = useSelector((state: IState) => {\n        return state.loginState.currentUser\n    })\n\n    let dispatch = useDispatch();\n\n    const submitRole = async (e: SyntheticEvent) => {\n        e.preventDefault();\n        try {\n            //let userId = await getUserByEmailRemote(props.associate.email)\n            // let thunk = await updateRoleActionMapper(currentUser.userId, userId, role); // Replace 1 with userID selected by Admin\n            let thunk = await updateRoleActionMapper(currentUser.userId, props.associate.email, role); // Replace 1 with userID selected by Admin\n            dispatch(thunk);\n            props.history.push('/home')\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    \n\n    return (\n        <Container className={classes.component} maxWidth=\"xs\">\n            <div>\n                <h1>Update A Role</h1>\n                <Paper variant=\"outlined\" square elevation={3}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel color='primary' htmlFor=\"age-native-simple\">Role</InputLabel>\n                        <ThemeProvider theme={theme}>\n                            <Select\n                                native\n                                value={role}\n                                onChange={updateRole}\n                                inputProps={{\n                                    name: 'role',\n                                    id: 'age-native-simple'\n                                }}>\n                                <option value='Associate'>Associate</option>\n                                <option value='Trainer'>Trainer</option>\n                                <option value='Admin'>Admin</option>\n                            </Select>\n                        </ThemeProvider>\n                    </FormControl>\n                    <br /><br />\n                    <button className={classes.button} color=\"default\" type=\"submit\" > Submit </button>\n                </Paper>\n            </div>\n        </Container>\n    )\n\n}\n","\nimport { userServiceBaseClient } from \"..\";\n\nexport const getAllAssociates = async () => {\n    try{\n        let res = await userServiceBaseClient.get(`/user-service/associates/`)\n        return res.data\n    }catch(e){\n        console.log(e);\n    }\n}","import React, { FunctionComponent } from 'react'\nimport { makeStyles, Theme, createStyles, Paper, Typography } from '@material-ui/core';\nimport { UpdateRoleComponent } from '../UpdateRoleComponent/UpdateRoleComponent';\nimport { Associate } from '../../models/Associate';\n\n\n\ninterface IAssociateDisplayProps {\n    associate: Associate\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& > *': {\n                margin: \"auto\",\n                marginTop: theme.spacing(5),\n                width: theme.spacing(60),\n                height: theme.spacing(40),\n            },\n        },\n        paper: {\n            backgroundColor: '#E0E0E0',\n            padding: theme.spacing(1),\n            overflow: 'auto',\n        },\n        typography: {\n            color: 'black',\n            padding: theme.spacing(1),\n            fontFamily: 'monospace',\n            fontSize: 18\n        }\n    }),\n);\n\nexport const AssociateDisplayComponent: FunctionComponent<IAssociateDisplayProps> = (props) => {\n    let classes = useStyles()\n\n    \n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={4}>\n                <Typography className={classes.typography} variant='h4'>\n                    email: {props.associate.email}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    salesforceId : {props.associate.salesforceId}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    firstName : {props.associate.firstName}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    lastName : {props.associate.lastName}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    flag : {props.associate.flag}\n                </Typography>\n\n            </Paper>\n            <UpdateRoleComponent key={'associate-key-' + props.associate.salesforceId} associate={props.associate} {...props}/>\n        </div >\n    )\n}","export function joinResponses(skillArray:[], yearArray:[], quarterArray:[] ){\nlet joinedArray = skillArray.concat(yearArray.concat(quarterArray))\nreturn joinedArray\n}","import { userServiceBaseClient } from '../index'\nimport { joinResponses } from '../../utils/joinResponses'\n\nexport const retrieveFilteredAssociateResults = async (batchSkill:string, batchQuarter:string, batchYear:string) => {\n    try{\n\n        let skillResponse = await userServiceBaseClient.get(`user-service/associates/skill/${batchSkill}`)\n        let yearResponse = await userServiceBaseClient.get(`user-service/associates/year/${batchYear}`)\n        let quarterResponse = await userServiceBaseClient.get(`user-service/associates/quarter/${batchQuarter}`)\n        let filteredAssociates = joinResponses( skillResponse.data, yearResponse.data, quarterResponse.data) \n        console.log(filteredAssociates)\n        return filteredAssociates\n    }\n    catch(e){\n        console.log(e)\n        throw(e)\n    }\n}","import React, { FunctionComponent, useState, useEffect, SyntheticEvent } from 'react';\nimport { makeStyles, Container, Grid, Paper, FormControl, InputLabel, Select, MenuItem, Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { getAllAssociates } from '../../remote/user-service/getAllAssociate';\nimport { AssociateDisplayComponent } from '../AssociateDisplayComponent/AssociateDisplayComponent';\nimport { retrieveFilteredAssociateResults } from '../../remote/user-service/retrieveFilteredAssociateResults';\nimport { Associate } from '../../models/Associate';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(5),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around'\n    },\n    fixedHeight: {\n        height: 600,\n    },\n    buttonStyle: {\n        '& > *': {\n          margin: theme.spacing(1),\n          backgroundColor:\"#f26926\",\n          textColor:\"black\"\n        },\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        \n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n}));\n\nexport const AllAssociatesComponent: FunctionComponent<any> = (props) => {\n\n    const classes = useStyles();\n\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    let [allAssociate, changeAllAssociate] = useState<Associate[]>([])\n\n    const [batchQuarter, setBatchQuarter] = React.useState('');\n    const [batchSkill, setBatchSkill] = React.useState('');\n    const [batchYear, setBatchYear] = React.useState('')\n\n  const handleSkillChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setBatchSkill(event.target.value as string);\n  };\n\n  const handleQuarterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setBatchQuarter(event.target.value as string);\n  };\n  const handleYearChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setBatchYear(event.target.value as string);\n  };\n    useEffect(() => {\n        const getAssociates = async () => {\n            let response = await getAllAssociates()\n            console.log(response)\n\n            changeAllAssociate(response)\n        }\n\n        if (allAssociate.length === 0) {\n            getAssociates()\n        }\n        \n      \n    })\n    const applyFilter = async (e: SyntheticEvent) => {\n      e.preventDefault()\n\n      let filteredResults = await retrieveFilteredAssociateResults(batchSkill, batchQuarter, batchYear)\n      changeAllAssociate(filteredResults)\n  }\n    \n\n    let AssociateDisplays = allAssociate.map((associate) => {\n        return (\n            <div>\n                <AssociateDisplayComponent key={'associate-key-' + associate.salesforceId} associate={associate} {...props}/>\n                {/* <UpdateRoleComponent key={'associate-key-' + associate.salesforceId} associate={associate} {...props}/> */}\n            </div>    \n        )\n    })\n\n    \n    return (\n        <div>\n            <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"skill-selector-label\">Tech</InputLabel>\n        <Select\n          labelId=\"skill-selector-label\"\n          id=\"skill-selector\"\n          value={batchSkill}\n          onChange={handleSkillChange}\n        >\n          <MenuItem value={'.NET%2FMicroservices'}>.NET with Microservices</MenuItem>\n          <MenuItem value={'Java with Automation'}>Java with Automation</MenuItem>\n          <MenuItem value={'SalesForce'}>SalesForce</MenuItem>\n          <MenuItem value={'Java%2FMicroservices'}>Java with Microservices</MenuItem>\n          <MenuItem value={'PEGA'}>Pegasystems</MenuItem>\n          <MenuItem value={'Java%20Devops'}>Java using Devops Practices</MenuItem>\n          <MenuItem value={'Java%20React'}>Java using React</MenuItem>\n          <MenuItem value={'Big%20Data'}>Big Data</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"year-selector-label\">Year</InputLabel>\n        <Select\n          labelId=\"year-selector-label\"\n          id=\"year-selector\"\n          value={batchYear}\n          onChange={handleYearChange}\n        >\n          <MenuItem value={'2020'}>2020</MenuItem>\n          <MenuItem value={'2019'}>2019</MenuItem>\n          <MenuItem value={'2018'}>2018</MenuItem>\n          <MenuItem value={'2017'}>2017</MenuItem>\n          <MenuItem value={'2016'}>2016</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"quarter-selector-label\">Quarter</InputLabel>\n        <Select\n          labelId=\"quarter-selector-label\"\n          id=\"quarter-selector\"\n          value={batchQuarter}\n          onChange={handleQuarterChange}\n        >\n          <MenuItem value={'1'}>Q1</MenuItem> \n          <MenuItem value={'2'}>Q2</MenuItem>\n          <MenuItem value={'3'}>Q3</MenuItem>\n          <MenuItem value={'4'}>Q4</MenuItem>\n\n        </Select>\n      </FormControl>\n      <Container className={classes.buttonStyle}>\n      <Button variant=\"contained\" onClick={applyFilter}>\n        Apply Filters\n      </Button>\n      </Container>\n      \n    </div>\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Grid container spacing={6}>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper className={fixedHeightPaper}>\n                            {AssociateDisplays}\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}","\nimport { userServiceBaseClient } from '..'\n\nexport const getBatchIdByTrainer = async (trainerEmail:string) => {\n\n    //let { trainerEmail } = req.params;\n\n\n    try{\n\n        //let trainerEmail = 'mock1005.employeee7113d5c-c49c-4fd6-b5eb-729bf54a5b6c@mock.com'\n        let res = await userServiceBaseClient.get(`/associates/{$trainerEmail}`)\n        console.log(res);\n\n        return res.data\n\n    }catch(e){\n        console.log(e);\n    }\n\n}","import {userServiceBaseClient} from '..'\n\nexport const getCurrentBatches = async () => {\n    try{\n        let res = await userServiceBaseClient.get(`/user-service/associates/currentBatches/`)\n        return res.data\n    }catch(e){\n        console.log(e);\n    }\n}","import React, { FunctionComponent } from 'react'\nimport { makeStyles, Theme, createStyles, Paper, Typography, Card, CardContent, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport { Batch } from '../../models/Batch';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\ninterface IBatchDisplayProps {\n    batch: Batch\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        // root: {\n        //     display: 'flex',\n        //     flexWrap: 'wrap',\n        //     '& > *': {\n        //         margin: \"auto\",\n        //         marginTop: theme.spacing(5),\n        //         width: theme.spacing(60),\n        //         height: theme.spacing(40),\n        //     },\n        // },\n        root: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15), //15\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n        paper: {\n            backgroundColor: '#E0E0E0',\n            padding: theme.spacing(1),\n            overflow: 'auto',\n        },\n        typography: {\n            color: 'black',\n            padding: theme.spacing(1),\n            fontFamily: 'monospace',\n            fontSize: 16\n        }\n    }),\n);\n\nexport const BatchDisplayComponent: FunctionComponent<IBatchDisplayProps> = (props) => {\n    let classes = useStyles()\n    return (\n        // <div className={classes.root}>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>\n                        BatchId: {props.batch.batchId}  {props.batch.name}\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography className={classes.typography} variant='h4'>\n                        Start Date : {props.batch.startDate}\n                    </Typography>\n                    <Typography className={classes.typography} variant='h4'>\n                        End Date : {props.batch.endDate}\n                    </Typography>\n                    <Typography className={classes.typography} variant='h4'>\n                        Skill : {props.batch.skill}\n                    </Typography>\n                    <Typography className={classes.typography} variant='h4'>\n                        Location : {props.batch.location}\n                    </Typography>\n                    <Typography className={classes.typography} variant='h4'>\n                        Type : {props.batch.type}\n                    </Typography>\n                    <Typography className={classes.typography} variant='h4'>\n                        Good Grade : {props.batch.goodGrade}\n                    </Typography>\n                    <Typography className={classes.typography} variant='h4'>\n                        Passing Grade : {props.batch.passingGrade}\n                    </Typography>\n                    {/* <Typography className={classes.typography} variant='h4'>\n                    employeeAssignments : {props.batch.employeeAssignments}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    associateAssignments : {props.batch.associateAssignments}\n                </Typography>*/}\n                    <Typography className={classes.typography} variant='h4'>\n                        Current Week : {props.batch.currentWeek}\n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n        // </div>\n        // <div className={classes.root}>\n        //     <Card>\n        //         <CardContent>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         BatchId: {props.batch.batchId}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         Batch Name : {props.batch.name}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         Start Date : {props.batch.startDate}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         End Date : {props.batch.endDate}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         Skill : {props.batch.skill}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         Location : {props.batch.location}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         Type : {props.batch.type}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         Good Grade : {props.batch.goodGrade}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         Passing Grade : {props.batch.passingGrade}\n        //     </Typography>\n        //    {/* <Typography className={classes.typography} variant='h4'>\n        //         employeeAssignments : {props.batch.employeeAssignments}\n        //     </Typography>\n        //     <Typography className={classes.typography} variant='h4'>\n        //         associateAssignments : {props.batch.associateAssignments}\n        //     </Typography>*/}\n        //     <Typography className={classes.typography} variant='h4'>\n        //         Current Week : {props.batch.currentWeek}\n        //     </Typography>\n        //         </CardContent>\n        //     </Card>\n        // </div >\n    )\n}\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { makeStyles, Container, Grid, Paper } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { getCurrentBatches } from '../../remote/user-service/getCurrentBatches';\nimport { Batch } from '../../models/Batch';\nimport { BatchDisplayComponent } from '../BatchDisplayComponent/BatchDisplayComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(5),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around'\n    },\n    fixedHeight: {\n        height: 600,\n    },\n}));\n\n\nexport const CurrentBatchesComponent:FunctionComponent = (props) => {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    let [currentBatch, changeCurrentBatch] = useState<Batch[]>([])\n\n    useEffect(() => {\n        const getBatches = async () => {\n            let response = await getCurrentBatches()\n            console.log(response)\n            changeCurrentBatch(response)\n        }\n\n        if (currentBatch.length === 0) {\n            getBatches()\n        }\n    })\n\n    let BatchDisplays = currentBatch.map((batch) => {\n            return <BatchDisplayComponent key={'batch-key-' + batch.batchId} batch={batch}/>\n        })\n        \n        return (\n            <div>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={6}>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Paper className={fixedHeightPaper}>\n                                {BatchDisplays}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n        )\n    }","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getBatchIdByTrainer } from '../../remote/user-service-api/getbatchIDbyTrainer'\nimport { Batch } from '../../models/Batch'\nimport { batch } from 'react-redux'\nimport { AllAssociatesComponent } from '../AllAssociateComponent/AllAssociateComponent'\nimport { CurrentBatchesComponent } from '../CurrentBatchesComponent/CurrentBatches'\nimport { Employee } from '../../models/Employee'\n\n\nexport const BatchbyTrainerEmailComponent:FunctionComponent <any> = (props) =>{\nlet [BatchProfile, changeBatchProfile] = useState <null | Batch> (null)\nlet {trainerEmail} = useParams()\n\n//will run after every single render\nuseEffect(()=>{\n    let getBatch = async()=>{\n        //await user userinfo and than call state \n        //console.log(\"email error\");\n        let batchInfo = await getBatchIdByTrainer(trainerEmail)\n        changeBatchProfile(batchInfo)\n    }\n    //havent gotten user profile yet\n    if(trainerEmail !== trainerEmail){\n        getBatch()\n    }\n})\n\nreturn (\n\n(BatchProfile)?\n//add all batch component instead later\n//<CurrentBatchesComponent batch={BatchProfile} />\n<CurrentBatchesComponent/>\n\n:\n<div>\n<h1>User Not Found</h1>\n</div>\n)\n}","import React, { FunctionComponent } from 'react';\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar';\n//import Typography from '@material-ui/core/Typography';\n//import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Link } from 'react-router-dom';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useSelector } from 'react-redux';\nimport { IState } from '../../reducers';\nimport { withStyles } from '@material-ui/styles';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            color: \"#f26926\",\n            marginLeft: 'auto'\n        },\n        title: {\n            color: \"#f26926\",\n            margins: 'auto',\n            flexGrow: 1,\n            fontFamily: \"Impact\"\n        },\n        link: {\n            color: '#474C55',\n            fontFamily: \"Impact\",\n            textDecoration: \"none\",\n            '&:hover': {\n                color: '#FFFFFF',\n            },\n        },\n        bar: {\n            backgroundColor: \"white\",\n            borderColor: \"#f26926\"\n        },\n        logo: {\n            alignItems: 'screenLeft'\n        }\n    }),\n);\n\n//this is what makes it orange when you hover on a menu item\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        '&:hover': {\n            backgroundColor: '#F26925',\n        },\n    },\n}))(MenuItem);\n\nexport const NavBarComponent: FunctionComponent<any> = (props) => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const currentUser = useSelector((state: IState) => {\n        return state.loginState.currentUser\n    })\n    \n\n    let currentRole = useSelector((state:IState)=>{\n        return state.getRoleState.currentRole\n    })\n\n    let menuItems = []\n    //do we need to specify that we only want this if there is no current user?\n    menuItems.push(<Link to='/register' className={classes.link}><StyledMenuItem key={'register'} onClick={handleClose}>Sign Up!</StyledMenuItem></Link>)\n\n    if (currentUser && currentRole) {\n        menuItems.pop()\n\n        if (currentRole.role == \"Associate\"){\n            menuItems.push(\n                <Link to='/updatePassword' className={classes.link}><StyledMenuItem key={'updatePassword'} onClick={handleClose}>Update Password </StyledMenuItem></Link>,\n                <Link to='/editProfile' className={classes.link}><StyledMenuItem key={'editProfile'} onClick={handleClose}>Edit Profile</StyledMenuItem></Link>,\n                <Link to='/createProfile' className={classes.link}><StyledMenuItem key={'createProfile'} onClick={handleClose}>Create Profile</StyledMenuItem></Link>,\n                // <Link to='/associateInfo' className={classes.link}><StyledMenuItem key={'associateInfo'} onClick={handleClose}>Associate Information</StyledMenuItem></Link>,\n                <Link to='/batchInfo' className={classes.link}><StyledMenuItem key={'batchInfo'} onClick={handleClose}>Batch Profile</StyledMenuItem></Link>,\n            )\n        }else if (currentRole.role == \"Admin\"){\n            menuItems.push(\n                // <Link to='/updateRole' className={classes.link}><StyledMenuItem key={'updateRole'} onClick={handleClose}> Update Role</StyledMenuItem></Link>,\n                <Link to='/allAssociate' className={classes.link}><StyledMenuItem key={'allAssociate'} onClick={handleClose}>All Associates</StyledMenuItem></Link>,\n                <Link to='/allProfile' className={classes.link}><StyledMenuItem key={'allProfile'} onClick={handleClose}>Profile Service</StyledMenuItem></Link>,\n            )\n        }\n        else if (currentRole.role == \"Trainer\"){\n            menuItems.push(\n                <Link to={`profileInfo/${currentUser.email}`} className={classes.link}><StyledMenuItem key={'profileInfo'} onClick={handleClose}>Associate Info By Trainer</StyledMenuItem></Link>,\n            )\n        }\n\n        menuItems.push(\n            <Link to='/logout' className={classes.link}><StyledMenuItem key={'logout'} onClick={handleClose}>Logout</StyledMenuItem></Link>,\n        )\n        \n    } else{\n        menuItems = [<Link to='/register' className={classes.link}><StyledMenuItem key={'register'} onClick={handleClose}>Sign Up!</StyledMenuItem></Link>]\n    } \n    \n    return (\n        <nav>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.bar}>\n\n                    <img className={classes.logo} src={('https://3g4d13k75x47q7v53surz1gi-wpengine.netdna-ssl.com/wp-content/themes/revature/imgs/logo.png')} alt='Revature Logo' />\n                    <IconButton onClick={handleClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" >\n                        <MenuIcon />\n                    </IconButton>\n                    <Menu id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}>\n                        {menuItems}\n                    </Menu>\n                    <IconButton component={Link} to=\"/\">\n                        <PersonIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </nav>\n\n    )\n}\n","import React, { FunctionComponent, useState, SyntheticEvent, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, Typography, TextField, Button, Theme, Container, createMuiTheme } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles, createStyles, ThemeProvider } from '@material-ui/styles';\nimport { deepOrange } from '@material-ui/core/colors';\nimport { IState } from '../../reducers';\nimport { loginActionMapper, loginErrorReset } from '../../action-mappers/login-action-mapper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        logo: {\n            maxHeight: 100\n        },\n        component: {\n            marginTop: 50,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        form: {\n            width: '100%',\n            marginTop: 10,\n        },\n        button: {\n            color: \"#474c55\",\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            fontFamily: 'sans-serif'\n        },\n        font: {\n            fontFamily: 'sans-serif',\n            fontWeight: 'bold'\n        },\n        links: {\n            color: \"#f26925\",\n            fontWeight: 'bold',\n        },\n    }),\n);\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: deepOrange,\n    },\n});\n\nexport const LoginComponent: FunctionComponent<any> = (props) => {\n    const classes = useStyles();\n    const [username, changeUsername] = useState('')\n    const [password, changePassword] = useState('')\n\n    const errorMessage = useSelector((state:IState) => {\n        return state.loginState.errorMessage\n    })\n\n    const dispatch = useDispatch();\n\n    const updateUsername = (event: any) => {\n        event.preventDefault()\n        changeUsername(event.currentTarget.value)\n    }\n    const updatePassword = (event: any) => {\n        event.preventDefault()\n        changePassword(event.currentTarget.value)\n    }\n\n    const loginSubmit = async (event: SyntheticEvent) => {\n        event.preventDefault()\n        try {\n            if (!username || !password) {\n                toast.error('You have entered an incorrect username or password')\n            } else {\n                let thunk = await loginActionMapper(username, password)\n                dispatch(thunk)\n\n                // props.history.push('/login')\n                props.history.push('/getRole')\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        if(errorMessage) {\n            toast.error(errorMessage)\n            dispatch(loginErrorReset()) //resets error message after toast\n        }\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.component}>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <img className={classes.logo} src=\"https://revature.com/wp-content/uploads/2017/08/rev-logo-2.png\" />\n                        <br /><br />\n                        <Typography variant=\"h6\" className={classes.font}>\n                            Welcome to Associate Companion.\n                    </Typography>\n                        <form autoComplete=\"off\" onSubmit={loginSubmit} noValidate className={classes.form}>\n                            <ThemeProvider theme={theme}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    fullWidth\n                                    required\n                                    id=\"username\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    defaultValue=\"@mock.com\"\n                                    // value={username}\n                                    onChange={updateUsername}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    fullWidth\n                                    required\n                                    id=\"password\"\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={updatePassword}\n                                />\n                            </ThemeProvider>\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.button}\n                            >\n                                Login\n                        </Button>\n                            <br /><br /><br />\n                            <Grid>\n                                <Link href=\"/register\" variant=\"body2\" underline=\"none\" className={classes.links}>\n                                    {\"Don't have an account? Sign up here!\"}\n                                </Link>\n                            </Grid>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    )\n}","import { FunctionComponent, useState, SyntheticEvent } from \"react\"\nimport { createStyles, makeStyles, Theme, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { toast } from \"react-toastify\"\nimport { User } from \"@auth0/auth0-react/dist/auth-state\"\nimport React from \"react\"\nimport { TextField, Button,Typography,Container } from \"@material-ui/core\"\nimport { submitSignUpRemote } from \"../../remote/user-service/newUserSignup\"\nimport { useDispatch } from \"react-redux\"\nimport { signUpActionMapper } from \"../../action-mappers/signup-register-action-mapper\"\nimport { deepOrange } from \"@material-ui/core/colors\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        logo: {\n            maxHeight: 100\n        },\n        component: {\n            marginTop: 50,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        form: {\n            width: '100%',\n            marginTop: 10,\n        },\n        button: {\n            color: \"#474c55\",\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            fontFamily: 'sans-serif'\n        },\n        font: {\n            fontFamily: 'sans-serif',\n            fontWeight: 'bold'\n        },\n        links: {\n            color: \"#f26925\",\n            fontWeight: 'bold',\n      },\n      h2:{\n            fontFamily:'arial'\n            },\n            Button: {\n                backgroundColor:'#F26926',\n                color:'#ffffff',\n                minWidth: 160,\n                height:55,\n                borderRadius: 25\n                \n            },\n        },\n    ));\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: deepOrange,\n    },\n});\n\nexport const NewUserComponent:FunctionComponent<any> = (props) => {\n  \n    const classes = useStyles();\n\n    let [preferredName, changePreferredName] = useState('')\n    let [lastName, changeLastName] = useState('')\n    let [email, changeEmail] = useState('')\n    let [password, changePassword] = useState('')\n    let [confirmPassword, changeConfirmPassword] = useState('')\n    let [connection, changeConnection] = useState('')\n\n    const updatePreferredName = (e: any) => {\n        e.preventDefault()\n        changePreferredName(e.currentTarget.value)\n    }\n    const updateLastName = (e: any) => {\n        e.preventDefault()\n        changeLastName(e.currentTarget.value)\n    }\n\n    const updateEmail = (e: any) => {\n        e.preventDefault()\n        changeEmail(e.currentTarget.value)\n    }\n    const updatePassword = (e: any) => {\n        e.preventDefault()\n        changePassword(e.currentTarget.value)\n    }\n    const updateConfirmPassword = (e: any) => {\n        e.preventDefault()\n        changeConfirmPassword(e.currentTarget.value)\n    }\n    /*\n    const updateConnection = (e:any) => {\n        e.preventDefault()\n        changeConnection(e.currentTarget.value)\n    }\n    */\n    let dispatch = useDispatch();\n\n    \n    const submitUser = async (e: SyntheticEvent) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            toast.error('Password Do Not Match')\n        } else {\n            let newUser: User = {\n                email,\n                password,\n                user_metadata: { preferredName, lastName },\n                connection: \"Username-Password-Authentication\",\n            }\n            let res = await submitSignUpRemote(newUser)\n            console.log(res)\n            let thunk = signUpActionMapper(email, password, { user_metadata: { preferredName, lastName } }, connection);\n            dispatch(thunk);\n        } \n        props.history.push('/login')\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n                \n        <div className={classes.component}>\n             <img className={classes.logo} src=\"https://revature.com/wp-content/uploads/2017/08/rev-logo-2.png\" />\n                        <br /><br /><br />\n            <Typography variant=\"h6\" className={classes.font}>\n                            Welcome to Associate Companion \n                    </Typography>{/*<br / */}\n                    <Typography variant=\"h6\" className={classes.font}>\n                            Sign Up Here!!\n                    </Typography>\n            <form onSubmit={submitUser} className ={classes.form}>  \n            <ThemeProvider theme={theme}>\n                <TextField id=\"outlined-basic\" variant=\"outlined\" margin=\"normal\"   fullWidth label=\"Preferred Name\" value={preferredName} onChange={updatePreferredName} /><br /><br />\n                {/* <br/> */}\n                <TextField id=\"outlined-basic\" variant=\"outlined\"  margin=\"normal\"    fullWidth label=\"Last Name\" value={lastName} onChange={updateLastName}/><br /><br />\n                {/* <br/> */}\n                <TextField id=\"outlined-basic\" variant=\"outlined\"   margin=\"normal\"   fullWidth label=\"Email\" value={email} onChange={updateEmail} /><br /><br />\n                {/* <br/> */}\n                <TextField id=\"outlined-basic\" variant=\"outlined\"  margin=\"normal\"   fullWidth type='password' label=\"Password\" value={password} onChange={updatePassword}/><br /> <br />\n                {/* <br/> */}\n                <TextField id=\"outlined-basic\" variant=\"outlined\"  margin=\"normal\"    fullWidth type='password' label=\"Confirm Password\" value={confirmPassword} onChange={updateConfirmPassword}/> <br />\n                <br/>\n                </ThemeProvider>\n                <Button className ={classes.button}  variant=\"contained\" type='submit'>Sign Up</Button>\n                \n            </form>\n        </div>\n       </Container>\n    )\n}\n","\nimport { profileServiceBaseClient } from \"../index\";\n\nexport const getAllProfile = async () => {\n    try{\n        let res = await profileServiceBaseClient.get(`/profile-service/profiles`)\n        console.log(res)\n        return res.data\n\n    }catch(e){\n        console.log(e);\n    }\n}","import React, { FunctionComponent } from 'react'\nimport { makeStyles, Theme, createStyles, Paper, Typography } from '@material-ui/core';\nimport { Profile } from '../../models/Profile';\n\n\n\ninterface IProfileDisplayProps {\n    profile: Profile\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            '& > *': {\n                margin: \"auto\",\n                marginTop: theme.spacing(5),\n                width: theme.spacing(60),\n                height: theme.spacing(40),\n            },\n        },\n        paper: {\n            backgroundColor: '#E0E0E0',\n            padding: theme.spacing(1),\n            overflow: 'auto',\n        },\n        typography: {\n            color: 'black',\n            padding: theme.spacing(1),\n            fontFamily: 'monospace',\n            fontSize: 18\n        }\n    }),\n);\n\nexport const ProfileDisplayComponent: FunctionComponent<IProfileDisplayProps> = (props) => {\n    let classes = useStyles()\n    console.log(props.profile.favLanguage);\n    \n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={4}>\n            <Typography className={classes.typography} variant='h4'>\n                {props.profile.firstName} {props.profile.lastName}, AKA {props.profile.nickname}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Uses {props.profile.pronouns} pronouns\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Id number: {props.profile.auth0Id}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Email:  {props.profile.email}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Batch ID: {props.profile.batchId}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Hobby: {props.profile.hobbies}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Favorite foods are: {props.profile.favFoods}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Superpower is: {props.profile.specialTrait}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Degree in: {props.profile.degree}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    Favorite coding Language: {props.profile.favLanguage}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                   Is skilled in: {props.profile.relevantSkills}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    The statement 'I am an introvert' is: {props.profile.introvert.toString()}\n                </Typography>\n                <Typography className={classes.typography} variant='h4'>\n                    The statement 'I am looking for a study group' is: {props.profile.studyGroup.toString()}\n                </Typography>\n\n            </Paper>\n        </div >\n    )\n}","import { profileServiceBaseClient } from '../index'\nimport { joinResponses } from '../../utils/joinResponses'\n\nexport const retrieveFilteredProfileResults = async (batchSkill:string, batchQuarter:string, batchYear:string) => {\n    try{\n\n        let skillResponse = await profileServiceBaseClient.get(`/profile-service/profiles/skill/${batchSkill}`)\n        let yearResponse = await profileServiceBaseClient.get(`/profile-service/profiles/year/${batchYear}`)\n        let quarterResponse = await profileServiceBaseClient.get(`/profile-service/profiles/quarter/${batchQuarter}`)\n        let filteredAssociates = joinResponses( skillResponse.data, yearResponse.data, quarterResponse.data) \n        console.log(filteredAssociates)\n        return filteredAssociates\n    }\n    catch(e){\n        console.log(e)\n        throw(e)\n    }\n}","import React, { FunctionComponent, useState, useEffect, SyntheticEvent } from 'react';\nimport { makeStyles, Container, Grid, Paper, FormControl, InputLabel, Select, MenuItem, Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { getAllProfile } from '../../remote/profile-service/getAllProfile';\nimport { ProfileDisplayComponent } from '../AllProfileIDisplay/AllProfileDisplay';\nimport { Profile } from '../../models/Profile';\nimport { retrieveFilteredProfileResults } from '../../remote/profile-service/retrieveFilteredProfileResults';\nimport { Associate } from '../../models/Associate';\nimport { profile } from 'console';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(0),\n        },\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(5),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around'\n    },\n    fixedHeight: {\n        height: 600,\n    },\n    buttonStyle: {\n        '& > *': {\n          margin: theme.spacing(1),\n          backgroundColor:\"#f26926\",\n          textColor:\"black\"\n        },\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        \n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n}));\n\nexport const AllProfileComponent: FunctionComponent<any> = (props) => {\n    console.log(props.Profile)\n    let [allAssociate, changeAllAssociate] = useState<Associate[]>([])\n    const classes = useStyles();\n\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    let [allProfile, changeAllProfile] = useState<Profile[]>([])\n    const [batchQuarter, setBatchQuarter] = React.useState('');\n    const [batchSkill, setBatchSkill] = React.useState('');\n    const [batchYear, setBatchYear] = React.useState('')\n\n  const handleSkillChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setBatchSkill(event.target.value as string);\n  };\n\n  const handleQuarterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setBatchQuarter(event.target.value as string);\n  };\n  const handleYearChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setBatchYear(event.target.value as string);\n  };\n\n    useEffect(() => {\n        const getProfile = async () => {\n            let response = await getAllProfile()\n            console.log(response)\n\n            changeAllProfile(response)\n        }\n\n        if (props.Profile === undefined ) {\n            getProfile()\n        }\n    })\n    const applyFilter = async (e: SyntheticEvent) => {\n        e.preventDefault()\n  \n        let filteredResults = await retrieveFilteredProfileResults(batchSkill, batchQuarter, batchYear)\n        changeAllAssociate(filteredResults)\n    }\n\n    let ProfileDisplays = allProfile.map((profile) => {\n        return <ProfileDisplayComponent key={'profile-key-' + profile.auth0Id} profile={profile} />\n    })\n    if(props.Profile !== undefined){\n      ProfileDisplays = props.Profile.map((profile: Profile) => <ProfileDisplayComponent key={'profile-key-' + profile.auth0Id} profile={profile} />)\n    }\n    return (\n      (props.Profile)?\n        <div>\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Grid container spacing={6}>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper className={fixedHeightPaper}>\n                            {ProfileDisplays}\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n        :\n        <div>\n        <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"skill-selector-label\">Tech</InputLabel>\n        <Select\n          labelId=\"skill-selector-label\"\n          id=\"skill-selector\"\n          value={batchSkill}\n          onChange={handleSkillChange}\n        >\n          <MenuItem value={'.NET%2FMicroservices'}>.NET with Microservices</MenuItem>\n          <MenuItem value={'Java with Automation'}>Java with Automation</MenuItem>\n          <MenuItem value={'SalesForce'}>SalesForce</MenuItem>\n          <MenuItem value={'Java%2FMicroservices'}>Java with Microservices</MenuItem>\n          <MenuItem value={'PEGA'}>Pegasystems</MenuItem>\n          <MenuItem value={'Java%20Devops'}>Java using Devops Practices</MenuItem>\n          <MenuItem value={'Java%20React'}>Java using React</MenuItem>\n          <MenuItem value={'Big%20Data'}>Big Data</MenuItem>\n          <MenuItem value={''}>No Filter</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"year-selector-label\">Year</InputLabel>\n        <Select\n          labelId=\"year-selector-label\"\n          id=\"year-selector\"\n          value={batchYear}\n          onChange={handleYearChange}\n        >\n          <MenuItem value={'2020'}>2020</MenuItem>\n          <MenuItem value={'2019'}>2019</MenuItem>\n          <MenuItem value={'2018'}>2018</MenuItem>\n          <MenuItem value={'2017'}>2017</MenuItem>\n          <MenuItem value={'2016'}>2016</MenuItem>\n          <MenuItem value={''}>No Filter</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"quarter-selector-label\">Quarter</InputLabel>\n        <Select\n          labelId=\"quarter-selector-label\"\n          id=\"quarter-selector\"\n          value={batchQuarter}\n          onChange={handleQuarterChange}\n        >\n          <MenuItem value={'1'}>Q1</MenuItem> \n          <MenuItem value={'2'}>Q2</MenuItem>\n          <MenuItem value={'3'}>Q3</MenuItem>\n          <MenuItem value={'4'}>Q4</MenuItem>\n          <MenuItem value={''}>No Filter</MenuItem>\n\n        </Select>\n      </FormControl>\n      <Container className={classes.buttonStyle}>\n      <Button variant=\"contained\" onClick={applyFilter}>\n        Apply Filters\n      </Button>\n      </Container>\n      \n    </div>\n    <div>\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Grid container spacing={6}>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper className={fixedHeightPaper}>\n                            {ProfileDisplays}\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    </div>\n    )\n}","import React, { FunctionComponent} from \"react\";\nimport { RouteComponentProps, Redirect } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginActionMapper } from \"../../action-mappers/login-action-mapper\";\n\nimport '../../App.css'\nimport { Button, } from \"@material-ui/core\";\nimport { IState } from \"../../reducers\";\nimport { prototype } from \"events\";\nimport { store } from \"../../store\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n\n\n\ninterface ILogoutProps extends RouteComponentProps {\n    changeCurrentUser:(user:any)=> void\n    user: any | null\n}\n\nexport const LogoutComponent:FunctionComponent<ILogoutProps> = (props) => {\n  \n    let dispatch = useDispatch()\n    const { logout } = useAuth0();\n    \n    const logoutSubmit = async () => {\n        let thunk = await loginActionMapper('logout', 'logout')\n        dispatch(thunk) \n        //document.cookie = `token=${null}`\n        document.cookie.split(\";\").forEach(function(c) { document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); });\n        let returnUrl = 'http://localhost:3000'\n        if(process.env['NODE_ENV'] === 'production'){\n            //Ingress's IP goes here\n            returnUrl='http://35.245.104.196'\n        }\n        logout({ returnTo: returnUrl})\n\n    }  \n\n    logoutSubmit()\n    let currentUser = useSelector((state:IState)=>{\n        return state.loginState.currentUser\n    })\n\n    if(currentUser = undefined){\n        props.history.push('/login')\n    }\n\n    return(    \n        (currentUser)?   \n        <Button variant=\"contained\"  onClick={logoutSubmit} >Logout</Button>   \n        :\n        <Redirect to='/login' / >        \n    )\n}","import React, { FunctionComponent } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { IState } from '../../reducers';\nimport { getRoleActionMapper } from '../../action-mappers/getRole-action-mapper';\n\nexport const GetRoleComponent:FunctionComponent<any> = (props) => {\n\n    let currentUser = useSelector((state:IState)=>{\n        return state.loginState.currentUser\n    })\n\n    let dispatch = useDispatch();\n\n    const getRole = async () => {\n        try {\n            let id = currentUser.userId\n            let thunk = await getRoleActionMapper(id)\n            dispatch(thunk)\n            props.history.push('/home')\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    if (currentUser){\n        getRole()\n    }\n\n    return(\n        <div> Loading... </div>\n    )\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport { CardHeader } from '@material-ui/core';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  header:{\n    background:\"#F26926\"\n\n  },\n\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6];\n\nexport default function HomeComp() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n     \n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n        <Container>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Welcome to Associate Companion\n            </Typography>\n        </Container>\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Associate Companion is a way for Revature Associates \n              to connect with their fellow batchmates and share useful information \n              with one another.\n            </Typography>\n        </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <CardHeader className={classes.header}\n                        \n                        title={<Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        RevaturePro\n                        </Typography>}\n                    >\n                    </CardHeader>\n                    <Typography>\n                        This is a link to the revature pro dashboard where you can see information about your curriculum.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                  <a href='https://app.revature.com/dashboard'>\n                    <Button size=\"small\" color=\"primary\">\n                    Go\n                    </Button>\n                  </a>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <CardHeader className={classes.header}\n                        title={<Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Benefits\n                        </Typography>}\n                    >\n                    </CardHeader>\n                    <Typography>\n                        View your employee benefits information.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                  <a href='https://sites.google.com/a/revature.com/portal/benefits'>\n                    <Button size=\"small\" color=\"primary\">\n                    Go\n                    </Button>\n                  </a>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <CardHeader className={classes.header}\n                        title={<Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Timesheets\n                        </Typography>}\n                    >\n                    </CardHeader>\n                    <Typography>\n                        Record and Submit your timesheet information.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                  <a href='https://rev2.force.com/revature/s/login/?ec=302&startURL=%2Frevature%2Fs%2F'>\n                    <Button size=\"small\" color=\"primary\">\n                    Go\n                    </Button>\n                  </a>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <CardHeader className={classes.header}\n                        title={<Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Handbook\n                        </Typography>}\n                    >\n                    </CardHeader>\n                    <Typography>\n                        View the Revature Employee Handbook to find all information about being a Revature employee.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                  <a href='https://drive.google.com/file/d/148J-UvJoLLwAmQcH2G_7sHdRig40ymT3/view'>\n                    <Button size=\"small\" color=\"primary\">\n                    Go\n                    </Button>\n                  </a>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <CardHeader className={classes.header}\n                        title={<Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Employee Portal\n                        </Typography>}\n                    >\n                    </CardHeader>\n                    <Typography>\n                        Access your Revature Employee Portal\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                  <a href='https://rev2.force.com/revature/s/login/?ec=302&startURL=%2Frevature%2Fs%2F'>\n                    <Button size=\"small\" color=\"primary\">\n                    Go\n                    </Button>\n                  </a>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <CardHeader className={classes.header}\n                        title={<Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        ADP\n                        </Typography>}\n                    >\n                    </CardHeader>\n                    <Typography>\n                        Visit ADP to mange your employee information regarding direct deposit, 401K, etc.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                  <a href='https://workforcenow.adp.com/workforcenow/login.html'>\n                    <Button size=\"small\" color=\"primary\">\n                    Go\n                    </Button>\n                  </a>\n                  </CardActions>\n                </Card>\n              </Grid>\n         \n            \n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}","import axios from 'axios'\n\n//an optional env for host address or localhost default\n//this is the caliber IP (?)\nlet baseURL = 'http://localhost:80/profile-service'\n\nexport const profileServiceBaseClient = axios.create({\n    baseURL,\n    headers:{\n        'Content-Type': 'application/json',\n    //     'Referer' : 'website.js-army.com'\n    },\n})\n","import { profileServiceBaseClient } from \"../index_profile\";\n\nexport const getMyProfile = async (email:string) => {\n    try{\n        let res = await profileServiceBaseClient.get(`profile-service/profiles/email/${email}`)\n        console.log(res)\n        return res.data\n\n    }catch(e){\n        console.log(e);\n    }\n}","import React, { FunctionComponent } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { TableCell, Table, TableBody, TableRow, TableHead, Box, Grid, Paper } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Link } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Profile } from '../../models/Profile';\ninterface IUserProfileProps{\n    profile:Profile | null\n}\nconst useStyles = makeStyles((theme) => ({\n    table: {\n      minWidth: 650,\n    },\n    large: {\n      width: 210,\n      height: 210,\n    },\n  }));\n  const defaultProps = {\n    borderColor: '#4DD0E1',\n    m: 1,\n    border: 6,\n    style: { width: '15rem', height: '15rem' },\n  };\nexport const UserDisplayComponent:FunctionComponent<IUserProfileProps> = (props) =>{\n    let classes = useStyles();\n    return (\n\n          <Grid container>\n          {/* <Grid item direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\n          <Box m={4} pt={2} pr={2}>\n    \n          </Box>\n          </Grid> */}\n          <Grid item direction=\"column\" justify=\"flex-end\" alignItems=\"flex-end\">\n            <Box width=\"50%\" >\n            <Table className={classes.table} aria-label=\"simple table\">\n              {/* <Grid item xs={12} justify='flex-end'>\n              <TableHead><h1>{props.user?.preferredName} {props.user?.lastName} <Link to={`/profile/edit/${(props.user)?props.user.userId : '0' }`}><EditIcon/></Link></h1></TableHead>\n              </Grid> */}\n              <TableBody>\n                <TableRow>\n                    <TableCell>First Name: </TableCell>\n                    <TableCell> {props.profile.firstName} </TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Last Name: </TableCell>\n                    <TableCell> {props.profile.lastName}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Email: </TableCell>\n                    <TableCell> {props.profile.email}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Higher Education: </TableCell>\n                    <TableCell> {props.profile.degree}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Batch: </TableCell>\n                    <TableCell> {props.profile.batchId}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Nickname: </TableCell>\n                    <TableCell> {props.profile.nickname}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Introvert?: </TableCell>\n                    <TableCell> {props.profile.introvert}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Pronouns: </TableCell>\n                    <TableCell> {props.profile.pronouns}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Favorite Food: </TableCell>\n                    <TableCell> {props.profile.favFoods}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Favorite Programming Language </TableCell>\n                    <TableCell> {props.profile.favLanguage}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Hobbies </TableCell>\n                    <TableCell> {props.profile.hobbies}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Special Trait: </TableCell>\n                    <TableCell> {props.profile.specialTrait}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Relevant Skills: </TableCell>\n                    <TableCell> {props.profile.relevantSkills}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Study Group: </TableCell>\n                    <TableCell> {props.profile.studyGroup}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n            </Box>\n            </Grid>\n          </Grid>\n        );\n    }","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getMyProfile } from '../../remote/profile-service/getMyProfile'\nimport { UserDisplayComponent } from '../UserDisplayComponent/UserDisplayComponent'\nimport { Profile } from '../../models/Profile'\n\nexport const ProfileComponent:FunctionComponent<any> = (props)=>{\n    let [userProfile, changeUserProfile] = useState<null | Profile>(null)\n    let {userEmail} = useParams()\n    useEffect(()=>{\n        let getUser = async ()=>{\n            let userInfo = await getMyProfile(userEmail)\n            changeUserProfile(userInfo)\n        }\n        if(!userProfile || userProfile.email !== userEmail){\n            getUser()\n            console.log('in the getUser')\n        }\n        console.log(userProfile)\n    })\n    return(\n        (userProfile)?\n        <UserDisplayComponent profile={userProfile}/>\n        :\n        <div>\n            <h3>User Not Found</h3>\n        </div>\n    )\n}","import {profileServiceBaseClient} from \"../index\";\n\nexport const getProfilebyTrainer = async (trainerEmail:string) => {\n\n    try{\n        let response = await profileServiceBaseClient.get(`/profile-service/profiles/trainer/${trainerEmail}`)\n        return response.data\n    }\n    catch(e){\n        console.log(e);\n        return('Something went wrong')\n    }\n    }\n\n","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Profile } from '../../models/Profile'\nimport { useSelector } from 'react-redux';\nimport { IState } from '../../reducers';\nimport { AllProfileComponent } from '../AllProfileComponent/AllProfileComponent'\nimport { getProfilebyTrainer } from '../../remote/profile-service/getProfilebyTrainer'\n\n\nexport const AssociatebyTrainerComponent:FunctionComponent <any> = (props) =>{\nlet [associateProfile, changeProfile] = useState <null | Profile> (null)\nlet {trainerEmail} = useParams()\n\n//will run after every single render\nlet currentUser = useSelector((state:IState)=>{\n    return state.loginState.currentUser\n})\n\n\nuseEffect(()=>{\n    let getProfile = async()=>{\n        let profileInfo =  await getProfilebyTrainer(trainerEmail)\n        console.log(profileInfo)\n        changeProfile(profileInfo)\n    }\n     getProfile()\n\n\n})\nreturn  (\n    \n    (associateProfile)?\n\n    <AllProfileComponent Profile={associateProfile} />\n    :\n    <div>\n    <h1>  </h1>\n    </div>\n    \n)\n}\n\n\n","import axios from 'axios'\n\n//an optional env for host address or localhost default\n//this is the caliber IP (?)\nlet baseURL = 'http://localhost:2007/profile-service/profiles'\n\nexport const profileServiceClient = axios.create({\n    baseURL,\n    headers:{\n        'Content-Type': 'application/json',\n    //     'Referer' : 'website.js-army.com'\n    },\n})\n","import { Profile } from \"../../models/Profile\";\nimport { profileServiceClient } from \".\";\n\n\nexport const editCurrentProfile = async (updtPrfl:Profile) => {\n\n    let authId = updtPrfl.auth0Id\n    \n    try{\n        let response = await profileServiceClient.patch(`/${authId}`, updtPrfl)\n        console.log(response);\n        return response.data\n    } catch(e){\n        console.log(e);\n        return('Something went wrong')\n    }\n}","import React, { FunctionComponent, useState, SyntheticEvent } from \"react\";\nimport { FormControl, TextField, FormLabel, RadioGroup, FormControlLabel, Radio, Button } from '@material-ui/core';\nimport { Profile } from \"../../models/Profile\";\nimport { editCurrentProfile } from \"../../remote/profile-serivce-api/updateProfile\";\nimport { useSelector } from \"react-redux\";\nimport { IState } from \"../../reducers\";\n\n\nexport const EditAssociateProfile: FunctionComponent<any> = (props) => {\n\n    let currentUser = useSelector((state: IState) => {\n        return state.loginState.currentUser\n    })\n\n    // const [value, setValue] = React.useState('true');\n\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //     setValue((event.target as HTMLInputElement).value);\n    //   };    \n\n    const [firstName, changeFirstName] = useState('')\n    const [lastName, changeLastName] = useState('')\n    const [nickname, changeNickname] = useState('')\n    const [pronouns, changePronouns] = useState('')\n    const [hobbies, changeHobbies] = useState('')\n    const [favFoods, changeFavFoods] = useState('')\n    const [specialTrait, changeSpecialTrait] = useState('')\n    const [degree, changeDegree] = useState('')\n    const [favLanguage, changeFavLanguage] = useState('')\n    const [relevantSkills, changeRelevantSkills] = useState('')\n    // const [introvert, changeIntrovert] = useState(Boolean)\n    // const [studyGroup, changeStudyGroup] = useState(Boolean)\n\n\n    const updateFirstName = (event: any) => {\n        event.preventDefault()\n        changeFirstName(event.currentTarget.value)\n    }\n    const updateLastName = (event: any) => {\n        event.preventDefault()\n        changeLastName(event.currentTarget.value)\n    }\n    const updateNickname = (event: any) => {\n        event.preventDefault()\n        changeNickname(event.currentTarget.value)\n    }\n    const updatePronouns = (event: any) => {\n        event.preventDefault()\n        changePronouns(event.currentTarget.value)\n    }\n    const updateHobbies = (event: any) => {\n        event.preventDefault()\n        changeHobbies(event.currentTarget.value)\n    }\n    const updateFavFoods = (event: any) => {\n        event.preventDefault()\n        changeFavFoods(event.currentTarget.value)\n    }\n    const updateSpecialTrait = (event: any) => {\n        event.preventDefault()\n        changeSpecialTrait(event.currentTarget.value)\n    }\n    const updateDegree = (event: any) => {\n        event.preventDefault()\n        changeDegree(event.currentTarget.value)\n    }\n    const updateFavLanguage = (event: any) => {\n        event.preventDefault()\n        changeFavLanguage(event.currentTarget.value)\n    }\n    const updateRelevantSkills = (event: any) => {\n        event.preventDefault()\n        changeRelevantSkills(event.currentTarget.value)\n    }\n    // const updateIntrovert = (event: any) => {\n    //     event.preventDefault()\n    //     changeIntrovert(event.currentTarget.value)\n    // }\n    // const updateStudyGroup = (event: any) => {\n    //     event.preventDefault()\n    //     changeStudyGroup(event.currentTarget.value)\n    // }\n    const registerSubmit = async (e: SyntheticEvent) => {\n        e.preventDefault()\n\n        let auth0Id = currentUser.userId\n        let email = currentUser.email\n        let batchId = undefined\n        let introvert = true\n        let studyGroup = false\n\n        let updatedProfile: Profile = {\n            firstName,\n            lastName,\n            auth0Id,\n            email,\n            batchId,\n            nickname,\n            pronouns,\n            hobbies,\n            favFoods,\n            specialTrait,\n            degree,\n            favLanguage,\n            relevantSkills,\n            introvert,\n            studyGroup,\n        }\n        await editCurrentProfile(updatedProfile)\n        props.history.push('/allProfile')\n    }\n    return (\n        <div>\n            <p>Update preferences your preferences by filling out and submitting the form below.</p>\n            <form onSubmit={registerSubmit}>\n                <TextField id=\"firstName\" label=\"First Name:\" value={firstName} onChange={updateFirstName} /><br />\n                <TextField id=\"lastName\" label=\"Last Name:\" value={lastName} onChange={updateLastName} /><br />\n                <TextField id=\"pronouns\" label=\"Nickname:\" value={nickname} onChange={updateNickname} /><br />\n                <TextField id=\"pronouns\" label=\"Preferred Pronouns:\" value={pronouns} onChange={updatePronouns} /><br />\n                <TextField id=\"hobby\" label=\"Hobby:\" value={hobbies} onChange={updateHobbies} /><br />\n                <TextField id=\"favFoods\" label=\"Favorite Foods:\" value={favFoods} onChange={updateFavFoods} /><br />\n                <TextField id=\"specialTrait\" label=\"Special Trait:\" value={specialTrait} onChange={updateSpecialTrait} /><br />\n                <TextField id=\"degree\" label=\"Degree:\" value={degree} onChange={updateDegree} /><br />\n                <TextField id=\"favLanguage\" label=\"Favorite Language\" value={favLanguage} onChange={updateFavLanguage} /><br />\n                <TextField id=\"relevantSkills\" label=\"Relevant Skills:\" value={relevantSkills} onChange={updateRelevantSkills} /><br /><br />\n                {/* <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Personality Type:</FormLabel>\n                    <RadioGroup aria-label=\"social\" name=\"social\" value={introvert} onChange={handleChange}>\n                        <FormControlLabel value={true} control={<Radio />} label=\"Introvert\" />\n                        <FormControlLabel value={false} control={<Radio />} label=\"Extrovert\" />\n                    </RadioGroup>\n                </FormControl><br /><br />\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Looking for a Study Group:</FormLabel>\n                    <RadioGroup aria-label=\"studyGroup\" name=\"studyGroup\" value={studyGroup} onChange={handleChange}>\n                        <FormControlLabel value={true} control={<Radio />} label=\"True\" />\n                        <FormControlLabel value={false} control={<Radio />} label=\"False\" />\n                    </RadioGroup>\n                </FormControl><br /> */}\n                <Button type=\"submit\" variant=\"contained\">\n                    Submit\n            </Button>\n            </form>\n        </div>\n    );\n} ","import { Profile } from \"../../models/Profile\";\nimport { profileServiceClient } from \".\";\n\n\nexport const createProfile = async (newProfile:Profile) => {\n    \n    try{\n        let response = await profileServiceClient.post(`/createProfile`, newProfile)\n        console.log(response);\n        return response.data\n    } catch(e){\n        console.log(e);\n        return('Something went wrong')\n    }\n}","import React, { FunctionComponent, useState, SyntheticEvent } from \"react\";\nimport { FormControl, TextField, FormLabel, RadioGroup, FormControlLabel, Radio, Button, Switch } from '@material-ui/core';\nimport { Profile } from \"../../models/Profile\";\nimport { useSelector } from \"react-redux\";\nimport { IState } from \"../../reducers\";\nimport { createProfile } from \"../../remote/profile-serivce-api/createProfile\";\n\n\nexport const CreateAssociateProfile: FunctionComponent<any> = (props) => {\n\n    let currentUser = useSelector((state: IState) => {\n        return state.loginState.currentUser\n    })\n\n    // const [value, setValue] = React.useState('true');\n\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //     setValue((event.target as HTMLInputElement).value);\n    //   };    \n\n    const [firstName, changeFirstName] = useState('')\n    const [lastName, changeLastName] = useState('')\n    const [nickname, changeNickname] = useState('')\n    const [pronouns, changePronouns] = useState('')\n    const [hobbies, changeHobbies] = useState('')\n    const [favFoods, changeFavFoods] = useState('')\n    const [specialTrait, changeSpecialTrait] = useState('')\n    const [degree, changeDegree] = useState('')\n    const [favLanguage, changeFavLanguage] = useState('')\n    const [relevantSkills, changeRelevantSkills] = useState('')\n    const [introvert, changeIntrovert] = useState(Boolean)\n    const [studyGroup, changeStudyGroup] = useState(Boolean)\n\n\n    const updateFirstName = (event: any) => {\n        event.preventDefault()\n        changeFirstName(event.currentTarget.value)\n    }\n    const updateLastName = (event: any) => {\n        event.preventDefault()\n        changeLastName(event.currentTarget.value)\n    }\n    const updateNickname = (event: any) => {\n        event.preventDefault()\n        changeNickname(event.currentTarget.value)\n    }\n    const updatePronouns = (event: any) => {\n        event.preventDefault()\n        changePronouns(event.currentTarget.value)\n    }\n    const updateHobbies = (event: any) => {\n        event.preventDefault()\n        changeHobbies(event.currentTarget.value)\n    }\n    const updateFavFoods = (event: any) => {\n        event.preventDefault()\n        changeFavFoods(event.currentTarget.value)\n    }\n    const updateSpecialTrait = (event: any) => {\n        event.preventDefault()\n        changeSpecialTrait(event.currentTarget.value)\n    }\n    const updateDegree = (event: any) => {\n        event.preventDefault()\n        changeDegree(event.currentTarget.value)\n    }\n    const updateFavLanguage = (event: any) => {\n        event.preventDefault()\n        changeFavLanguage(event.currentTarget.value)\n    }\n    const updateRelevantSkills = (event: any) => {\n        event.preventDefault()\n        changeRelevantSkills(event.currentTarget.value)\n    }\n    const updateIntrovert = (event: any) => {\n        event.preventDefault()\n        changeIntrovert(event.currentTarget.value)\n    }\n    const updateStudyGroup = (event: any) => {\n        event.preventDefault()\n        changeStudyGroup(event.currentTarget.value)\n    }\n    const registerSubmit = async (e: SyntheticEvent) => {\n        e.preventDefault()\n\n        let auth0Id = currentUser.userId\n        let email = currentUser.email\n        let batchId = \"TR-1255\"\n        // let introvert = true\n        // let studyGroup = false\n\n        let newProfile: Profile = {\n            firstName,\n            lastName,\n            auth0Id,\n            email,\n            batchId,\n            nickname,\n            pronouns,\n            hobbies,\n            favFoods,\n            specialTrait,\n            degree,\n            favLanguage,\n            relevantSkills,\n            introvert,\n            studyGroup,\n        }\n        await createProfile(newProfile)\n        props.history.push('/allProfile')\n    }\n    return (\n        <div>\n            <p>Update preferences your preferences by filling out and submitting the form below.</p>\n            <form onSubmit={registerSubmit}>\n                <TextField id=\"firstName\" label=\"First Name:\" value={firstName} onChange={updateFirstName} /><br />\n                <TextField id=\"lastName\" label=\"Last Name:\" value={lastName} onChange={updateLastName} /><br />\n                <TextField id=\"pronouns\" label=\"Nickname:\" value={nickname} onChange={updateNickname} /><br />\n                <TextField id=\"pronouns\" label=\"Preferred Pronouns:\" value={pronouns} onChange={updatePronouns} /><br />\n                <TextField id=\"hobby\" label=\"Hobby:\" value={hobbies} onChange={updateHobbies} /><br />\n                <TextField id=\"favFoods\" label=\"Favorite Foods:\" value={favFoods} onChange={updateFavFoods} /><br />\n                <TextField id=\"specialTrait\" label=\"Special Trait:\" value={specialTrait} onChange={updateSpecialTrait} /><br />\n                <TextField id=\"degree\" label=\"Degree:\" value={degree} onChange={updateDegree} /><br />\n                <TextField id=\"favLanguage\" label=\"Favorite Language\" value={favLanguage} onChange={updateFavLanguage} /><br />\n                <TextField id=\"relevantSkills\" label=\"Relevant Skills:\" value={relevantSkills} onChange={updateRelevantSkills} /><br /><br />\n                <p>Personality Type:<br/>Extrovert&nbsp;&nbsp;\n           <FormControlLabel\n                  control={<Switch checked={introvert} onChange={updateIntrovert} name=\"introvert\" color=\"default\"/>}\n                  label=\"Introvert\" /></p>\n            <p>Looking for a study group?<br/>No&nbsp;&nbsp; \n            <FormControlLabel\n                  control={<Switch checked={studyGroup} onChange={updateStudyGroup} name=\"studyGroup\" color=\"default\"/>}\n                  label=\"Yes\" /></p>\n                <Button type=\"submit\" variant=\"contained\">\n                    Submit\n            </Button>\n            </form>\n        </div>\n    );\n} ","import React, { useState } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { UpdatePasswordComponent } from './components/UpdatePasswordComponent/UpdatePasswordComponent'\nimport { UpdateRoleComponent } from './components/UpdateRoleComponent/UpdateRoleComponent';\nimport { AllAssociatesComponent } from './components/AllAssociateComponent/AllAssociateComponent'\nimport { BatchbyTrainerEmailComponent } from './components/BatchbyTrainerComponent/BatchbyTrainerEmailComponent';\nimport { NavBarComponent } from './components/NavbarComponent/NavbarComponent';\nimport { LoginComponent } from './components/LoginComponent/LoginComponent';\nimport { User } from '@auth0/auth0-react/dist/auth-state';\nimport { NewUserComponent } from './components/Auth0SignUpComponent/Auth0SignupComponent';\nimport { CurrentBatchesComponent } from './components/CurrentBatchesComponent/CurrentBatches';\nimport HomePageComponent from './components/HomePageComponent/HomePageComponent';\nimport WelcomeComponent from './components/WelcomeComponent/WelcomeComponent'\nimport { AllProfileComponent } from './components/AllProfileComponent/AllProfileComponent'\nimport { LogoutComponent } from './components/LogoutComponent/LogoutComponent';\nimport { GetRoleComponent } from './components/GetRoleComponent/GetRoleComponent';\nimport { ToastContainer } from 'react-toastify';\nimport HomeComp from './components/HomeComp/HomeComp';\nimport { ProfileComponent } from './components/ProfileComponent/ProfileComponent';\nimport { AssociatebyTrainerComponent } from './components/AssociatebyTrainerComponent/AssociatebyTrainerComponent';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport { EditAssociateProfile } from './components/AssociateProfileComponent/EditAssociateProfile';\nimport { CreateAssociateProfile } from './components/AssociateProfileComponent/CreateAssociateProfile';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toast: {\n      background: \"#E0E0E0\",\n      border: \"#f26925 solid\",\n      borderRadius: \"5px\",\n      borderTopColor: \"#f26925\",\n      borderTopWidth: \"7px\",\n      borderWidth: \"0px\",\n      color: \"#474c55\",\n      fontFamily: 'sans-serif',\n      height: \"100%\",\n      marginLeft: \"70%\",\n      marginTop: \"2%\",\n      padding: \"20px\",\n      width: \"250px\",\n    }\n  })\n)\n\nfunction App() {\n  const classes = useStyles();\n  const [currentUser, changeCurrentUser] = useState<null | User>(null)\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n\n          {/* <Redirect to='/home' /> */}\n\n          <NavBarComponent user={currentUser} />\n          \n          <Route path='/updatePassword' component={UpdatePasswordComponent} />\n          <Route path='/editProfile' component={EditAssociateProfile} />\n          <Route path='/createProfile' component={CreateAssociateProfile}/>\n          <Route path='/updateRole' component={UpdateRoleComponent} />\n          <Route exact path='/' render={(props) => (<LoginComponent changeCurrentUser={changeCurrentUser} {...props} />)} />\n          <Route path='/register' component={NewUserComponent} />\n          <Route path='/allAssociate' component={AllAssociatesComponent} />\n          <Route path='/currentBatches' component={CurrentBatchesComponent} />\n          <Route path='/batchInfo' component={BatchbyTrainerEmailComponent} />\n          <Route path='/allProfile' component={AllProfileComponent} />\n          <Route exact path='/profile/:userId' component={ProfileComponent} user={currentUser}/>\n          <Route path='/profileInfo/:trainerEmail' component={AssociatebyTrainerComponent} />\n          <Route path='/home'>\n            <HomeComp />\n          </Route>\n          \n          {/* <Route path='/logout' render={(props) => (<LogoutComponent changeCurrentUser={changeCurrentUser} user={currentUser} {...props} />)} /> */}\n          <Auth0Provider domain=\"revature-net.us.auth0.com\" \n                          clientId={process.env['REACT_APP_AUTH0_CLIENT_ID']} \n                          redirectUri={window.location.origin}>\n                          <Route path='/logout' component={LogoutComponent}/>\n          </Auth0Provider>\n          <Route path='/getRole' component={GetRoleComponent} />\n        </Router>\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={1000}\n          hideProgressBar={false}\n          closeOnClick={true}\n          pauseOnHover={true}\n          draggable={true}\n          closeButton={false}\n          className={classes.toast}\n        />\n      </Provider>\n    </div>\n  );\n}\n\nexport default  App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}